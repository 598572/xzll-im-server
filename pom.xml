<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!--        <version>2.1.13.RELEASE</version>-->
        <version>2.7.0</version>
        <relativePath/>
    </parent>
    <packaging>pom</packaging>

    <groupId>com.xzll</groupId>
    <artifactId>xzll-im-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <description>开源im项目</description>

    <modules>
        <module>im-common</module>
        <module>im-gateway</module>
        <module>im-auth</module>
        <module>im-connect</module>
        <module>im-business</module>
        <module>im-console</module>
    </modules>


    <properties>
        <java.version>11</java.version>

        <!--老版本-->
        <!--        <spring.cloud.version>Greenwich.SR6</spring.cloud.version>-->
        <!--        <alibaba.cloud.version>2.1.4.RELEASE</alibaba.cloud.version>-->
        <!--        <springboot.version>2.1.13.RELEASE</springboot.version>-->
        <!--        <dubbo.version>2.7.13</dubbo.version>-->
        <!--        <netty.version>4.1.21.Final</netty.version> -->

        <!--升级后的新版本-->
        <spring.cloud.version>2021.0.3</spring.cloud.version>
        <alibaba.cloud.version>2021.0.1.0</alibaba.cloud.version>
        <springboot.version>2.7.0</springboot.version>
        <dubbo.version>3.0.7</dubbo.version>
        <curator.version>4.3.0</curator.version>
        <netty.version>4.1.75.Final</netty.version>

        <!--暂时不用新版本es客户端-->
        <!--        <elasticsearch.java.client.version>7.17.5</elasticsearch.java.client.version>-->

        <xzll.im.version>0.0.1-SNAPSHOT</xzll.im.version>
        <fastjson.version>1.2.46</fastjson.version>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <redisson.version>3.14.0</redisson.version>
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <mapstruct.extensions.spring.version>0.1.1</mapstruct.extensions.spring.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <nacos.group.name>xzll-im</nacos.group.name>

        <druid..version>1.2.8</druid..version>
        <shardingsphere.version>5.2.1</shardingsphere.version>


        <spring-cloud-starter-oauth2.version>2.2.5.RELEASE</spring-cloud-starter-oauth2.version>
        <nimbus-jose-jwt.version>9.23</nimbus-jose-jwt.version>

        <!--prometheus抓取依赖的jar版本，注：无需指定版本，spring-boot-starter-parent 父项目中已经定义了。 -->
<!--        <prometheus-client.version>0.16.0</prometheus-client.version>-->
<!--        <dropwizard.version>4.1.17</dropwizard.version>-->
    </properties>

    <dependencies>
        <!--日志服务都需要所以这里强制继承-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${springboot.version}</version>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!--需要有这个 不然的话 解析不了bootstrap文件-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--springcloud的父依赖 nacos需要用到-->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${alibaba.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>


            <!--此配置比较重要，如果没有此配置 可能出现dubbo和其他jar冲突的情况，将报错：
               An attempt was made to call a method that does not exist. The attempt was made from the following location:
                   org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.<init>(ReferenceAnnotationBeanPostProcessor.java:106)
               The following method did not exist:
                   'void org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.setClassValuesAsString(boolean)'
               The method's class, org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor, is available from the following locations:
                   jar:file:/Users/hzz/.m2/repository/org/apache/dubbo/dubbo/2.7.13/dubbo-2.7.13.jar!/org/apache/dubbo/config/spring/beans/factory/annotation/ReferenceAnnotationBeanPostProcessor.class
               It was loaded from the following location:
                   file:/Users/hzz/.m2/repository/org/apache/dubbo/dubbo/2.7.13/dubbo-2.7.13.jar
               Action:
               Correct the classpath of your application so that it contains a single, compatible version of org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor
               解决方式就是配置如下jar 来自github: https://github.com/alibaba/spring-cloud-alibaba/issues/2310
            -->
            <dependency>
                <groupId>com.alibaba.spring</groupId>
                <artifactId>spring-context-support</artifactId>
                <version>1.0.11</version>
            </dependency>

            <!--需要此jar包 如果不配这个 bootstarp.yml文件将不会被识别为spring配置文件,也就是bootstrap.yml文件将不会有小绿树叶标识-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-bootstrap</artifactId>
                <version>3.0.0</version>
            </dependency>


            <dependency>
                <groupId>org.apache.rocketmq</groupId>
                <artifactId>rocketmq-client</artifactId>
                <!--注意client 版本 大于4.6.0会报错 RocketMQ invokeSync call timeout， 另外记录下 目前我的server是4.8.0的-->
                <version>4.5.0</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>3.5.0</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>8.0.23</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid..version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-jdbc-core-spring-boot-starter</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>1.33</version>
            </dependency>

            <!--The dependencies of some of the beans in the application context form a cycle: | com.github.pagehelper.autoconfigure.PageHelperAutoConfiguration-->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>1.4.1</version>
            </dependency>

            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-redis</artifactId>
                <version>${springboot.version}</version>
                <exclusions>
                    <!--去除logback配置 防止logback和log4j2共存引起告警或者其他日志问题-->
                    <exclusion>
                        <artifactId>spring-boot-starter-logging</artifactId>
                        <groupId>org.springframework.boot</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.xzll</groupId>
                <artifactId>im-business-api</artifactId>
                <version>${xzll.im.version}</version>
            </dependency>

            <dependency>
                <groupId>com.xzll</groupId>
                <artifactId>im-common</artifactId>
                <version>${xzll.im.version}</version>
            </dependency>

            <dependency>
                <groupId>com.xzll</groupId>
                <artifactId>im-connect-api</artifactId>
                <version>${xzll.im.version}</version>
            </dependency>

            <!--外部依赖-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${springboot.version}</version>
                <exclusions><!-- 去掉springboot默认配置 -->
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>


            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${springboot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>logback-classic</artifactId>
                    </exclusion>
                    <exclusion>
                        <!--不排除的话将会和 log4j-slf4j-impl冲突，具体见：https://stackoverflow.com/questions/32366586/using-log4j2-with-slf4j-java-lang-stackoverflowerror-->
                        <artifactId>log4j-to-slf4j</artifactId>
                        <groupId>org.apache.logging.log4j</groupId>
                    </exclusion>
                </exclusions>

            </dependency>


            <!--            <dependency>-->
            <!--                <groupId>com.alibaba.boot</groupId>-->
            <!--                <artifactId>dubbo-spring-boot-starter</artifactId>-->
            <!--                <version>0.2.1</version>-->
            <!--            </dependency>-->

            <!--务必使用apache的方式！ springcloud 中的dubbo已经被标记为过时 不推荐使用了-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo-spring-boot-starter</artifactId>
                <version>${dubbo.version}</version>
            </dependency>
            <!--ZooKeeper客户端-->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <!--此jar必须有 在dubbo2.7.13时 没有也行 ，但是升级到dubbo3.x时 需要依赖此jar否则报错： java.lang.NoClassDefFoundError: org/apache/curator/x/discovery/ServiceDiscoveryBuilder -->
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-x-discovery</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <!--dubbo指定ip调用依赖此jar-->
            <dependency>
                <groupId>org.apache.dubbo.extensions</groupId>
                <artifactId>dubbo-cluster-specify-address-dubbo3</artifactId>
                <version>1.0.0</version>
            </dependency>

            <!--此客户端较新，暂时不使用 先试用elasticsearch-rest-high-level-client  因为 elasticsearch-rest-high-level-client 更稳定 虽然他标识为 ：已过时的 -->
            <!--            <dependency>-->
            <!--                <groupId>co.elastic.clients</groupId>-->
            <!--                <artifactId>elasticsearch-java</artifactId>-->
            <!--                <version>${elasticsearch.java.client.version}</version>-->
            <!--            </dependency>-->

            <!--如果单纯使用springboot集成nacos 则使用此方式 但是此方式有问题读不到bootstrap.yml文件 原因可能是boot不支持对bootstarp.yml的文件读取，但是我又不想像官网那样把命名空间dataid配到注解中，所以不用这种方式了：https://nacos.io/zh-cn/docs/quick-start-spring-boot.html-->
            <!--            <dependency>-->
            <!--                <groupId>com.alibaba.boot</groupId>-->
            <!--                <artifactId>nacos-config-spring-boot-starter</artifactId>-->
            <!--                <version>${nacos.version}</version>-->
            <!--            </dependency>-->


            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>1.2.17</version>
            </dependency>


            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <optional>true</optional>
                <!--之前是1.18.0 编译时将报错： java.lang.ExceptionInInitializerError: Unable to make field private com.sun.tools.javac.processing.JavacProcessingEnvironment$DiscoveredProcessors com.sun.tools.javac.processing.JavacProcessingEnvironment.discoveredProcs accessible: module jdk.compiler does not "opens com.sun.tools.javac.processing" -->
                <!--解决此报错的方法就是 升级lombook版本为 1.18.20-->
                <version>1.18.20</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>5.6.6</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>2.14.2</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>log4j2-ttl-thread-context-map</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.logging.log4j</groupId>
                        <artifactId>log4j-api</artifactId>
                    </exclusion>
                </exclusions>
                <version>1.4.0</version>
                <scope>runtime</scope>
            </dependency>

            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct.extensions.spring</groupId>
                <artifactId>mapstruct-spring-annotations</artifactId>
                <version>${mapstruct.extensions.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-binding.version}</version>
            </dependency>

            <!--guava 依赖-->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>27.0.1-jre</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>1.3.1</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.7.0</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.7</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-io</artifactId>
                <version>1.3.2</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>1.3.1</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>3.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>3.2</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>1.4.0</version>
            </dependency>
            <dependency>
                <groupId>commons-httpclient</groupId>
                <artifactId>commons-httpclient</artifactId>
                <version>3.1</version>
            </dependency>
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging-api</artifactId>
                <version>1.1</version>
            </dependency>
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>1.6</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.9.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>





            <!-- HBase 依赖 - 专门为Hadoop 3.x设计 -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase</artifactId>
                <version>2.5.7-hadoop3</version>
                <type>pom</type>
            </dependency>

            <!-- 具体的HBase客户端依赖 -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-client</artifactId>
                <version>2.5.7-hadoop3</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hbase/hbase-common -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-common</artifactId>
                <version>2.5.7-hadoop3</version>
            </dependency>

            <!-- https://mvnrepository.com/artifact/org.apache.hbase/hbase-server -->
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-server</artifactId>
                <exclusions>
                    <exclusion>
                        <artifactId>hadoop-mapreduce-client-core</artifactId>
                        <groupId>org.apache.hadoop</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>reload4j</artifactId>
                        <groupId>ch.qos.reload4j</groupId>
                    </exclusion>
                </exclusions>
                <version>2.5.7-hadoop3</version>
            </dependency>

            <!-- Hadoop 3.x 核心依赖 -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-reload4j</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>reload4j</artifactId>
                        <groupId>ch.qos.reload4j</groupId>
                    </exclusion>
                </exclusions>
                <version>3.2.4</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>

        <plugins>

            <!--
            无需在父pom配置 此打包插件，此插件只配置在 有springboot main启动类的 需要打成胖jar的模块中。
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            -->

            <!-- 在父pom配置好编译插件后 无需在子模块中再次配置了-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!--指定注解处理器的路径和依赖项, 告诉  编译器插件应该使用哪些注解处理器来生成代码 或  执行其他编译时的任务-->
                    <annotationProcessorPaths>
                        <!--使用mapstruct的话 必须有这一步 因为其是在编译期间进行代码生成的的-->
                        <path>
                            <groupId>org.mapstruct</groupId>
                            <artifactId>mapstruct-processor</artifactId>
                            <version>${mapstruct.version}</version>
                        </path>
                        <!--mapstruct和spring集成的话 这一步也必须有 集成后 直接使用 spring的 ConversionService去掉就行了 更方便些-->
                        <path>
                            <groupId>org.mapstruct.extensions.spring</groupId>
                            <artifactId>mapstruct-spring-extensions</artifactId>
                            <version>${mapstruct.extensions.spring.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>${lombok-mapstruct-binding.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>


    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <!--默认激活dev环境 除了rocketmq连的172.30.128.65 其他全部连的是mac本地中间件 -->
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!--替换bootstrap.properties中的 ${nacos.serverAddress}变量-->
                <!-- 18848 连的是洋宝贝 的 vm03 （192.168.122.138）本机18848映射到 vm03的8848 -->
<!--                <nacos.serverAddr>127.0.0.1:18848</nacos.serverAddr>-->
<!--                使用vm06的nacos-->
                <nacos.serverAddr>120.46.85.43:8848</nacos.serverAddr>
                <nacos.config.namespace>dev_id
                </nacos.config.namespace><!--               f407f750-961e-44f2-80d7-6983374ad1e0-->
                <boot.profile>dev</boot.profile>
                <nacos.config.groupname>${nacos.group.name}</nacos.config.groupname>
            </properties>
        </profile>

        <profile>
            <id>test</id>
            <activation>
            </activation>
            <properties>
                <!--模拟test环境  vm06-->

                <!--替换bootstrap.properties中的 ${nacos.serverAddr}变量-->
                <nacos.serverAddr>192.168.122.136:8848</nacos.serverAddr>
                <!--根据test的命名空间 填写此处的命名空间ID-->
                <nacos.config.namespace>test_id</nacos.config.namespace>
                <boot.profile>test</boot.profile>
                <nacos.config.groupname>${nacos.group.name}</nacos.config.groupname>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <activation>
            </activation>
            <properties>
                <!--模拟prod环境【xzll-beijing-home】，除了mysql（暂时没迁移），其余全部连接192.168.1.103 的docker中的服务-->

                <!--替换bootstrap.properties中的 ${nacos.serverAddr}变量-->
                <nacos.serverAddr>192.168.1.103:8848</nacos.serverAddr>
                <!--根据prod的命名空间 填写此处的命名空间ID-->
                <nacos.config.namespace>prod_id</nacos.config.namespace>
                <nacos.config.groupname>${nacos.group.name}</nacos.config.groupname>
                <boot.profile>prod</boot.profile>
            </properties>
        </profile>
    </profiles>


</project>
