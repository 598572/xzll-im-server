
# 目前已经改造为nginx 维持长连接     ： 客户端 <----> nginx  <----> NettyServer
# 本质上客户端和NettyServer感知不到nginx存在，性能上也不用担忧。没比直连差多少

# 全局配置
user root;
worker_processes auto;
error_log /home/hzz/nginx/logs/error.log;
pid /home/hzz/nginx/logs/nginx.pid;

# 事件模块
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP 模块
http {
    # 基础配置
    include /home/hzz/nginx/conf/mime.types;
    default_type application/octet-stream;

    # 日志格式
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # 在 http 块中定义上游服务器组
    upstream im_server_backend {
        # 内网 Netty 服务器地址
        server 192.168.1.150:10001;  # 替换为你的内网 IP 和端口
        # 如果有多个实例，可以添加更多服务器
        # server 192.168.1.101:10001;
        # server 192.168.1.102:10001;

        # 负载均衡策略（可选）
        # least_conn;  # 最少连接
        ip_hash;     # IP 哈希，保证同一客户端总是连接到同一服务器

        # 健康检查
        keepalive 32;
    }

    # 服务器配置
    server {
        listen 80;
        server_name 120.46.85.43;  # 你的公网 IP

        # 日志配置
        access_log /home/hzz/nginx/logs/im_access.log main;
        error_log  /home/hzz/nginx/logs/im_error.log;

        # WebSocket 长连接路由
        location /websocket {
            # 反向代理到内网 Netty 服务器
            proxy_pass http://im_server_backend;

            # WebSocket 协议升级配置
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # 基础头部设置
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 长连接超时配置
            proxy_read_timeout 3600s;    # 1小时读取超时
            proxy_send_timeout 3600s;    # 1小时发送超时
            proxy_connect_timeout 60s;   # 连接超时

            # 缓冲区配置
            proxy_buffering off;         # 关闭缓冲，实时传输
            proxy_request_buffering off; # 关闭请求缓冲

            # 错误处理
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # 健康检查接口（可选）
        location /health {
            proxy_pass http://im_server_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # 健康检查超时设置
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
            proxy_send_timeout 5s;
        }

        # 静态文件服务（如果需要）
        location /static/ {
            alias /home/hzz/nginx/html/static/;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }

        # 默认页面
        location / {
            root /home/hzz/nginx/html;
            index index.html index.htm;
        }
    }
}

