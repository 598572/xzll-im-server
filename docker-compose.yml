version: '3.9'
services:
  im-gateway:
    build:
      context: ./im-gateway/src/main/resources
      dockerfile: Dockerfile
      # 添加此配置确保使用本地镜像
      cache_from:
        - openjdk:17-jdk
    image: im-gateway:latest

    hostname: im-gateway
    container_name: im-gateway
    restart: always
    ports:
      - "8081:8081"
    networks:
      - default_network
    volumes:
      - "/tmp/data/logs:/logs"
  im-auth:
    build:
      context: ./im-auth/src/main/resources
      dockerfile: Dockerfile
      # 添加此配置确保使用本地镜像
      cache_from:
        - openjdk:17-jdk
    image: im-auth:latest

    hostname: im-auth
    container_name: im-auth
    restart: always
    ports:
      - "8082:8082"
    networks:
      - default_network
    volumes:
      - "/tmp/data/logs:/logs"
  im-business:
    # 可以根据Dockerfile构建镜像（但是，Docker Compose 会在检测到上下文变化时重新构建镜像。也就是说如果你不修改Dockerfile docker-compose应该不是每次都构建镜像 实测确实如此）
    build:
      context: ./im-business/im-business-service/src/main/resources # 指定Dockerfile文件位置
      dockerfile: Dockerfile # 指定名称
      # 添加此配置确保使用本地镜像
      cache_from:
        - openjdk:17-jdk
    image: im-business:latest # 指定生成镜像的 名称

    # 也可以直接指定镜像名 但是要确保镜像存在 （如果在docker仓库, 则不需要再本地存在镜像 会自动pull）
    # image: im-business:0.0.2

    # 设置容器的主机名 即修改 ： /etc/hosts 中的内容,注意 如果是在docker中 ，容器间相互访问的时使用的是 容器的hostname 那么必须配hostname
    hostname: im-business
    # 容器名称
    container_name: im-business
    # 重启策略， always 表示无论哪种状态退出，都会重启容器
    restart: always
    ports:
      # 设置主机与容器的端口映射
      - "8083:8083"
    networks:
      # 使用默认网络即：docker0 桥接
      - default_network
    extra_hosts:
      - "hadoop01:192.168.1.130"
      - "hadoop02:192.168.1.131"
      - "hadoop03:192.168.1.132"
    volumes:
      # 将主机的 /tmp/data/logs 目录挂载到容器的 /logs 目录。这样可以实现数据的持久化，当容器重启时，数据不会丢失，注意 挂载文件需要给宿主机文件 添加最权限，chmod -R 777 目标文件夹
      - "/tmp/data/logs:/logs"

  im-connect:
    build:
      context: ./im-connect/im-connect-service/src/main/resources
      dockerfile: Dockerfile
      # 添加此配置确保使用本地镜像
      cache_from:
        - openjdk:17-jdk
    image: im-connect:latest
    hostname: im-connect
    container_name: im-connect
    restart: always
    ports:
      - "10000:10000" # prometheus指标采集端口 http (注：不采用jmx方式采集)
      - "10001:10001" # netty端口
    networks:
      - default_network
    volumes:
      - "/tmp/data/logs:/logs"

  im-console:
    build:
      context: ./im-console/im-console-service/src/main/resources
      dockerfile: Dockerfile
      # 添加此配置确保使用本地镜像
      cache_from:
        - openjdk:17-jdk
    image: im-console:latest
    hostname: im-console
    container_name: im-console
    restart: always
    ports:
      - "8084:8084"
    networks:
      - default_network
    volumes:
      - "/tmp/data/logs:/logs"


  im-data-sync:
    build:
      context: ./im-data-sync/src/main/resources
      dockerfile: Dockerfile
      # 添加此配置确保使用本地镜像
      cache_from:
        - openjdk:17-jdk
    image: im-data-sync:latest
    hostname: im-data-sync
    container_name: im-data-sync
    restart: always
    ports:
      - "8085:8085"
    networks:
      - default_network
    volumes:
      - "/tmp/data/logs:/logs"

networks:
  default_network:
    # 使用docker默认网络即：（桥接模式）
    driver: bridge

